name: CI/CD Deployment Pipeline

on:
  workflow_dispatch:  # 手動觸發（建議這樣做，方便測試）

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 安裝 Bun
        run: curl -fsSL https://bun.sh/install | bash

      - name: 設定 Bun 路徑
        run: echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: 取得版本號
        id: version
        run: |
          if [ -f "package.json" ]; then
            VERSION=$(node -p "require('./package.json').version")
          else
            VERSION=$(git describe --tags --always 2>/dev/null || echo "v0.0.0-$(git rev-parse --short HEAD)")
          fi
          echo "✅ Version detected: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Install dependencies & build
        run: |
          npm install
          npm run build
          zip -r build-${{ env.VERSION }}.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build-${{ env.VERSION }}.zip

  deploy-staging:
    name: 🧪 Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    env:
      VERSION: ${{ needs.build.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: 安裝 Bun
        run: curl -fsSL https://bun.sh/install | bash

      - name: 設定 Bun 路徑
        run: echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Install GitHub CLI
        run: sudo apt install gh -y

      - name: Create Staging Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="staging-${VERSION}"
          NOTE="🧪 Staging build for version ${VERSION}"
          echo "Creating release ${TAG}"
          gh release create "$TAG" "build-${VERSION}.zip" --notes "$NOTE"

  deploy-production:
    name: 🚀 Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production   # ✅ 需審核才會執行
    env:
      VERSION: ${{ needs.build.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 安裝 Bun
        run: curl -fsSL https://bun.sh/install | bash

      - name: 設定 Bun 路徑
        run: echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Install GitHub CLI
        run: sudo apt install gh -y

      - name: Create Production Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${VERSION}"
          NOTE="🚀 Production release for version ${VERSION}"
          echo "Creating release ${TAG}"
          gh release create "$TAG" "build-${VERSION}.zip" --notes "$NOTE"
